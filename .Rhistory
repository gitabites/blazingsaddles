library(ggplot2)
I_jean <- read.delim("http://bit.ly/avml_ggplot2_data")
ggplot2
head(I_jean)
p <- ggplot(I_jean, aes(x = Dur_msec, y = F1.n))
library("ggplot2")
q()
library('ggplot2')
libarty(class)
library(class)
data <- iris
labels <- data$species
View(iris)
data$Species <- NULL
set.seed(1)
train.pct<- .7
N <- nrow(data)
train.data <- data[train.index, ]
train.index <- sample(1:N, train.pct * N)
train.data <- data[train.index, ]
test.data <- data[-train.index, ]
train.labels <- as.factor(as.matrix(labels)[train.index, ])
train.labels <- as.factor(as.matrix(labels)[train.index, ])
iris
head(iris)
summary(iris)
library('class')
knn
data <- iris
N <- nrow(data)
train.pct <- .7
train.index <- sample(1:N, train.pct* N)
train.data <- data[train.index, ]
test.data <- data[-train.index, ]
test.predict <- knn( train = train.data[,c(1,2,3,4)] , test = test.data[,c(1,2,3,4)]), cl = train.data$Species, k = 3)
test.predict <- knn( train = train.data[,c(1,2,3,4)] , test = test.data[,c(1,2,3,4)], cl = train.data$Species, k = 3)
test.predict <- knn( train = train.data[,c(1,2,3,4)] , test = test.data[,c(1,2,3,4)], cl = train.data$Species, k = 3)
print(table(test.data$Species, test.labels))
iris
head(iris) #preview the dataset
summmary(iris) #get overview of the data
library('class') #load classification library
knn #display knn source
data <- iris
N <- nrow(data)
train.pct <- .7 #set train/tet split at 70%
train.index <- sample(1:N,  train.pct* N)  #randomly sample indices for your training set
train.data <- data[train.index, ] #separate out those indices to your traing set
test.data <- data[-train.index, ] #everything else goes to your test set
#TRAIN YOUR MODEL (k = 3, but you could set it as anything)
test.predict <- knn( train = train.data[,c(1,2,3,4)] , test = test.data[,c(1,2,3,4)], cl = train.data$Species, k = 3)
#PRINT CONFUSION MATRIX
print(table(test.data$Species, test.labels))
#OUTPUT ACCURACY
sum ( test.data$Species != test.labels ) / nrow(test.data)
setwd('/Users/clairewillett/blazingsaddles')
#Sources: 2011 unemployment http://www.bls.gov/opub/ted/2012/ted_20120313.htm
#2011 gun crime: https://docs.google.com/spreadsheet/ccc?key=0AonYZs4MzlZbdGhycDRPQlN1dTBoMzJWOTk0Uk9DRVE#gid=10
#2011 SERI ranking: http://www.aps.org/units/fed/newsletters/summer2011/white-cottle.cfm
#Step 1: load & process data
#load & store data
data <- read.csv("guncrime_2011.csv"_
unemp <- read.csv("stateunemp2011.csv")
seri <- read.csv("seri2011.csv")
#resort seri to be alphabetically ordered (because other two datasets are alphabetically ordered)
seri <- seri[order(seri$State),]
#drop third column of unemp
unemp <- unemp[,c("State", "Unemployment.rate")]
#merge unemp and seri
whycrime <- merge(seri, unemp)
#drop last 4 rows of data because not available on other two datasets
data <- head(data, -4L)
#rename column 4 to "firearm_deaths"
names(data)[4] <- "firearm_deaths"
#keep only the State and firearm_deaths columns from data
data <- data[,c("State", "firearm_deaths")]
#remove Alabama and Florida rows from whycrime (missing from data)
whycrime <- whycrime[c(-1, -9),]
#remove DC from data (missing from whycrime)
data <- data[c(-8),]
#merge data and why crime
whycrime1 <- merge(whycrime, data)
#transform firearm_deaths from factor to numeric
whycrime1 <- transform(whycrime1, firearm_deaths = as.numeric(gsub(",","",firearm_deaths)))
#Part 2: Visualize data
#load ggplot2
library(ggplot2)
firearm_seri <- ggplot(data=whycrime1)+ aes(x=firearm_deaths, y=SERI.index, color=State)+ geom_text(aes(label=State))
firearm_unemp <- ggplot(data=whycrime1)+ aes(x=firearm_deaths, y=Unemployment.rate, color=State)+ geom_text(aes(label=State))
firearm_seri <- firearm_seri+ xlab("Firearm Deaths 2011") + ylab("SERI Index") + ggtitle("Firearm deaths and SERI Index per state, 2011")
firearm_unemp <- firearm_unemp + xlab("Firearm Deaths 2011") + ylab("Unemployment Rate") + ggtitle("Firearm deaths and unemployment rate per state, 2011")
firearm_seri <- firearm_seri + theme(legend.position="none")
firearm_unemp <- firearm_unemp + theme(legend.position="none")
png(filename="firearm_seri.png", width=800, height=600)
print(plotObject)
dev.off()
